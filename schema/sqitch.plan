%syntax-version=1.0.0
%project=cif
%uri=https://github.com/bcgov/cif


create_roles 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the roles used by the application
schemas/main 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif schema
schemas/private 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private schema
util_functions/verify_function_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_function_not_present function
util_functions/verify_grant 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_grant function
util_functions/verify_policy 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_policy function
util_functions/verify_policy_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_policy_not_present function
util_functions/verity_type_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verity_type_not_present function
util_functions/grant_permissions 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.grant_permissions function
util_functions/read_only_user_policies 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.read_only_user_policies function
util_functions/upsert_policy 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.upsert_policy function
tables/connect_session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.connect_session table
types/keycloak_jwt 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.keycloak_jwt type
functions/session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.session function
trigger_functions/update_timestamps 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.update_timestamps trigger function
trigger_functions/archived_records_are_immutable 2022-01-06T18:37:08Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A trigger to ensure that no changes to a deleted record can be saved
trigger_functions/set_previous_form_change_id [schemas/private] 2022-03-21T23:04:27Z Dylan Leard <dylan@button.is> # Trigger function sets the previous_form_change_id fkey on insert
util_functions/upsert_timestamp_columns [schemas/private trigger_functions/update_timestamps] 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the upsert_timestamp_columns function
tables/cif_user 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.cif_user table
trigger_functions/set_user_id 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.set_user_id trigger function
mutations/create_user_from_session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.create_user_from_session mutation function
tables/sector [schemas/main] 2022-06-14T21:28:12Z Dylan Leard <dylan@button.is> # Table for industry sectors used by the CleanBC Industry Fund
tables/funding_stream 2021-12-01T05:19:11Z Alex Zorkin <alex@bigthink.io> # adding funding_stream table to plan
tables/funding_stream_rfp 2021-12-15T00:47:25Z Alex Zorkin <alex@bigthink.io> # add funding stream rfp table
tables/project_status 2021-12-21T21:19:31Z Alex Zorkin <alex@bigthink.io> # creating project_status table
tables/funding_stream_rfp_project_status 2022-01-12T20:47:40Z Alex Zorkin <alex@bigthink.io> # adding cross table between funding_stream_rfp and project_status
trigger_functions/operator_swrs_organisation_is_immutable 2022-02-17T21:46:04Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # swrs_operation_id column is immutable on the operator table
tables/operator [schemas/main] 2021-11-30T22:34:14Z Dylan Leard <dylan@button.is> # Create the cif.operator table
tables/project [tables/operator] 2021-11-04T20:34:23Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Create the project table
util_functions/camel_to_snake_case 2021-12-11T00:37:54Z Matthieu Foucault <matthieu@button.is> # Add cif_private.camel_to_snake_case
types/form_change_operation 2022-02-04T22:17:52Z Matthieu Foucault <matthieu@button.is> # add enum type for form_change.operation column
trigger_functions/commit_form_change [schemas/private util_functions/camel_to_snake_case types/form_change_operation] 2021-11-08T22:54:27Z Dylan Leard <dylan@button.is> # Trigger function to apply changes to a table once the change has been committed
tables/change_status [schemas/main] 2021-11-08T22:46:03Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Table to constrain the status of a form_change row
trigger_functions/committed_changes_are_immutable 2022-01-06T23:40:27Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Trigger to prevent committed changes from being altered
trigger_functions/commit_project_revision 2021-12-07T00:37:33Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A trigger function executed when a whole project revision is committed, triggering commit on the individual form_change records
tables/project_revision 2021-12-07T00:39:51Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A table to track global project revisions - containing multiple changes
tables/form_change [tables/change_status trigger_functions/set_previous_form_change_id] 2021-11-04T20:58:49Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Form history table to track changes to records
tables/attachment 2021-11-24T21:24:45Z Alex Zorkin <alex@bigthink.io> # Add schema for attachments
tables/contact 2022-01-19T22:40:59Z Matthieu Foucault <matthieu@button.is> # add contact table
tables/project_contact 2022-01-21T20:45:52Z Matthieu Foucault <matthieu@button.is> # add an association table for projects and contacts
computed_columns/contact_full_name 2022-01-21T21:33:00Z Matthieu Foucault <matthieu@button.is> # add a computed column for a contact's full name
computed_columns/contact_full_phone 2022-01-21T21:33:18Z Matthieu Foucault <matthieu@button.is> # add a computed column for a contact's full phone number
computed_columns/project_revision_project_form_change [tables/project_revision] 2021-12-09T18:55:14Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column to retrieve the form change related to the project record, within a project revision
functions/pending_new_project_revision 2021-12-22T23:40:21Z Matthieu Foucault <matthieu@button.is> # add function returning a pending new project revision created by the current user
mutations/create_form_change 2022-02-01T00:52:42Z Matthieu Foucault <matthieu@button.is> # add custom mutation to create a form change
computed_columns/contact_pending_form_change 2022-02-07T18:30:37Z Matthieu Foucault <matthieu@button.is> # add a computed column returning the pending form_change for a given contact
mutations/add_contact_to_revision 2022-01-27T23:48:16Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Custom mutation that prepopulates an insert to the form change table for a new contact on a a project revision
util_functions/import_swrs_operators_from_fdw 2022-02-28T19:55:13Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # a function importing operators from existing reports and operators swrs data tables. Meant to be used in conjunction with a foreign data wrapper, as setup in util_functions/import_swrs_operators
util_functions/import_swrs_operators [tables/operator schemas/private] 2022-02-09T17:17:00Z Dylan Leard <dylan@button.is> # Add function to import operators from swrs using a foreign data wrapper
tables/project_manager_label [schemas/main] 2022-02-17T23:44:42Z Dylan Leard <dylan@button.is> # Table contains the possible labels that a cif_user can be assigned to as a manager of a project
tables/project_manager 2021-11-30T22:00:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A table to track project manager assignments to projects
mutations/create_project [tables/project] 2021-11-09T21:34:55Z Dylan Leard <dylan@button.is> # Custom mutation to create a project
types/manager_form_changes_by_label_composite_return [schemas/main] 2022-02-18T20:58:37Z Dylan Leard <dylan@button.is> # Add custom composite return type for computed column project_revision_project_manager_form_changes_by_label
computed_columns/project_revision_project_manager_form_changes_by_label [tables/project_revision tables/project_manager] 2022-02-18T21:32:45Z Dylan Leard <pierre.bastianelli@gov.bc.ca> # Computed column to retrieve the set of form changes related to the project manager association by project_manager_label, within a project revision
computed_columns/project_pending_project_revision 2022-02-16T17:14:03Z Matthieu Foucault <matthieu@button.is> # add a computed column to return a pending revision for a project
computed_columns/operator_pending_form_change 2022-02-16T21:48:38Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A computed column returning a potential existing form change for an operator, scoped by the current user
functions/pending_new_form_change_for_table 2022-03-05T00:09:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # a custom query that returns a pending form change for the current user for a given table name. Allows to resume an object creation
mutations/create_project_revision 2022-02-24T19:17:45Z Matthieu Foucault <matthieu@button.is> # add function to create a project revision for a given project
computed_columns/form_change_is_unique_value 2022-03-11T22:54:06Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A computed column that returns whether a column name already has a value in the database
computed_columns/form_change_parent_form_change_from_revision [tables/form_change] 2022-03-23T18:42:00Z Dylan Leard <dylan@button.is> # Function returns a parent form_change record
computed_columns/cif_user_full_name 2022-03-21T20:23:37Z Gurjeet Matharu <gurjeet@matharuco.com> # A computed function for contact and cif_user providing full name
computed_columns/form_change_is_pristine 2022-04-18T23:26:43Z Gurjeet Matharu <gurj@Ggurjeet@matharuco.com> # Add is_prestine computed col to form_change
computed_columns/form_change_as_project [tables/project tables/form_change] 2022-04-26T21:56:35Z Dylan Leard <dylan@button.is> # Computed column returns data from the new_form_data column as if it were a project to allow graph traversal
computed_columns/form_change_as_project_contact [tables/project tables/contact tables/form_change] 2022-04-27T00:04:24Z Dylan Leard <dylan@button.is> # Computed column returns a project_contact record type for a contact form_change
computed_columns/form_change_as_project_manager [tables/form_change tables/project_manager] 2022-04-29T21:10:14Z Dylan Leard <dylan@button.is> # Computed column returns a project_manager record type for a project_manager form_change
tables/report_type 2022-05-02T17:29:36Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Create the cif.report_type table
tables/reporting_requirement 2022-04-29T22:15:51Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Create the cif.reporting_requirement table
tables/payment 2022-05-02T19:01:17Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Create the cif.payment table
computed_columns/project_latest_committed_project_revision [tables/project tables/project_revision] 2022-05-02T18:21:58Z Mike Vesprini <mike@button.is> # A computed column returning the latest committed revision for a project
util_functions/get_form_status [tables/form_change] 2022-05-04T21:17:49Z Dylan Leard <dylan@button.is> # Helper function returns the status for a form_change
computed_columns/project_revision_tasklist_status_for 2022-05-10T21:56:17Z Brianna Cerkiewicz <brianna@button.is> # Computed column to return a tasklist status for any tasklist form
computed_columns/project_revision_form_changes_for [tables/form_change tables/project_revision] 2022-05-16T21:52:59Z Dylan Leard <dylan@button.is> # Computed column dynamically retrieves a set of form_change records relating to a project revision
mutations/undo_form_changes 2022-05-24T21:49:12Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add custom mutation to undo form changes in a project revision
computed_columns/form_change_as_reporting_requirement 2022-05-14T00:24:44Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Casts a form_change record as a cif.reporting_requirement type, so we can traverse it with graphql queries
computed_columns/project_revision_upcoming_reporting_requirement_form_change 2022-05-16T21:56:32Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # computed column returning the form_change for the next due reporting requirement, optionally filtered by report type
computed_columns/form_change_reporting_requirement_status [tables/form_change] 2022-06-06T20:20:47Z Dylan Leard <dylan@button.is> # Computed column returns a status for a reporting requirement form_change record based on due_date and received_date
mutations/stage_dirty_form_changes 2022-04-29T22:59:08Z Matthieu Foucault <matthieu@button.is> # add a mutation to automatically stage all the dirty form changes of a project_revision
types/milestone_report_status_return 2022-06-01T16:57:00Z Dylan Leard <dylan@button.is> # Return type for project_revision_milestone_report_statuses
computed_columns/project_revision_milestone_report_statuses [tables/form_change] 2022-05-31T23:23:44Z Dylan Leard <dylan@button.is> # Computed column to return both form completion statuses and reporting requirement statuses for individual milestones and an overall completion status
tables/emission_intensity_payment_percent [schemas/main] 2022-06-22T18:02:47Z Dylan Leard <dylan@button.is> # Lookup table to map emission intensity performance to payment percentage
tables/emission_intensity_report [tables/reporting_requirement] 2022-06-22T20:29:25Z Dylan Leard <dylan@button.is> # Table for emission intensity report data
tables/milestone_report [tables/reporting_requirement] 2022-06-22T21:01:22Z Dylan Leard <dylan@button.is> # Table containing data for milestone reports
mutations/add_milestone_to_revision [tables/reporting_requirement tables/form_change] 2022-06-23T23:26:45Z Dylan Leard <dylan@button.is> # A custom mutation chain to create form_change records for multiple tables when creating a milestone
mutations/discard_milestone_form_change [tables/form_change tables/project_revision] 2022-06-24T16:25:29Z Dylan Leard <dylan@button.is> # Custom mutation to discard a set of form_change records relating to a milestone_report
tables/funding_parameter 2022-06-23T17:34:25Z Gurjeet Matharu <gurjeet@matharuco.com> # funding parameter table
computed_columns/reporting_requirement_has_expenses [tables/report_type tables/reporting_requirement] 2022-07-06T22:31:55Z Mike Vesprini <mike@button.is> # Computed column returns true if the report type of the reporting requirement has payments associated with it
@1.0.0-rc.1 2022-07-14T17:26:21Z Dylan Leard <dylan@button.is> # release v1.0.0-rc.1
@1.0.0-rc.2 2022-07-14T18:23:38Z Dylan Leard <dylan@button.is> # release v1.0.0-rc.2
mutations/undo_form_changes [mutations/undo_form_changes@1.0.0-rc.1] 2022-07-19T23:31:18Z Mike Vesprini <mike@button.is> # Handle empty project form
util_functions/get_form_status [util_functions/get_form_status@1.0.0-rc.1] 2022-07-19T23:33:37Z Mike Vesprini <mike@button.is> # Empty project forms return not started
computed_columns/project_revision_project_manager_form_changes_by_label [computed_columns/project_revision_project_manager_form_changes_by_label@1.0.0-rc.1] 2022-07-25T20:35:46Z Dylan Leard <dylan@button.is> # Migration: explicitly order return object
mutations/add_emission_intensity_report_to_revision 2022-07-19T20:38:25Z Gurjeet Matharu <gurjeet@matharuco.com> # Custom mutation to add an emission intensity report form change and reporting requirement formchange.
tables/report_type_001 [tables/report_type] 2022-07-19T20:48:05Z Gurjeet Matharu <gurjeet@matharuco.com> # Adding an TEIMP report type.
mutations/discard_emission_intensity_report 2022-07-19T21:06:39Z Gurjeet Matharu <gurjeet@matharuco.com> # Discarding emission intensitry report and coresponding reporting requirement
computed_columns/project_revision_milestone_report_statuses [computed_columns/project_revision_milestone_report_statuses@1.0.0-rc.1] 2022-07-22T22:10:58Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Excluding archived form changes
computed_columns/project_revision_upcoming_reporting_requirement_form_change [computed_columns/project_revision_upcoming_reporting_requirement_form_change@1.0.0-rc.1] 2022-07-22T22:12:33Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Excluding archived form changes
mutations/create_project_revision [mutations/create_project_revision@1.0.0-rc.1] 2022-07-29T21:25:54Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add missing emission intesnity report union
computed_columns/emission_intensity_report_calculated_ei_performance 2022-07-27T20:07:35Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Returns the calculated EI intensity value
computed_columns/form_change_as_emission_intensity_report 2022-08-03T17:12:52Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Computed column to return form change as emission intensity report type
@1.0.0-rc.3 2022-08-08T22:14:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # release v1.0.0-rc.3
mutations/discard_funding_parameter_form_change 2022-08-10T23:11:54Z Gurjeet Matharu <gurjeet@matharuco.com> # Discarding funding parameter form change
@1.0.0-rc.4 2022-08-15T18:49:49Z Dylan Leard <dylan@button.is> # release v1.0.0-rc.4
util_functions/verify_function_not_present [util_functions/verify_function_not_present@1.0.0-rc.4] 2022-08-22T18:14:11Z Dylan Leard <dylan@button.is> # Migration: verify function should also check the schema
tables/project_type 2022-08-08T18:26:33Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Adding a table for project type
tables/project_001 2022-08-08T15:28:44Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add a score and project type column to the project table
computed_columns/form_change_as_project [computed_columns/form_change_as_project@1.0.0-rc.1 tables/project_001] 2022-08-08T21:44:08Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add score and project type to project computed column
tables/funding_parameter_001 2022-08-10T18:55:07Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add proponent cost field to funding_parameter table
computed_columns/project_revision_gross_payment_amount 2022-07-29T21:34:20Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column returning the sum of all gross amounts paid out for a project revision
computed_columns/project_revision_net_payment_amount 2022-07-29T21:36:02Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column returning the sum of all net amounts paid for a project revision
computed_columns/project_revision_teimp_payment_percentage 2022-07-30T00:00:47Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column returning the teimp payment percentage for a project revision, according to the formula and table defined in schedule G
computed_columns/project_revision_teimp_payment_amount 2022-08-03T23:47:46Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column to return the total teimp payment amount to date, based on the payment percentage and the gross and net payment amounts from the milestones
tables/emission_intensity_report_001 [tables/emission_intensity_report] 2022-08-10T17:56:52Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Adding a column for adjusted TEIMP holdback payment
computed_columns/form_change_as_emission_intensity_report [computed_columns/form_change_as_emission_intensity_report@1.0.0-rc.3] 2022-08-10T18:24:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Adding the adjusted holdback payment column
computed_columns/emission_intensity_report_calculated_ei_performance [computed_columns/emission_intensity_report_calculated_ei_performance@1.0.0-rc.4] 2022-08-17T23:55:28Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Addressing a bug where order of operations was ambiguous for postgres
tables/additional_funding_source_status 2022-08-16T17:26:13Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Table for statuses related to additional funding sources
tables/additional_funding_source 2022-08-11T15:49:26Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Table for storing additional funding sources data
mutations/add_additional_funding_source_to_revision 2022-08-11T20:07:28Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Custom mutation that prepopulates an insert to the form change table for a new funding source on a project revision
mutations/create_project_revision [mutations/create_project_revision@1.0.0-rc.4] 2022-08-17T23:16:56Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add missing additional funding resource union
computed_columns/cif_user_full_name [computed_columns/cif_user_full_name@1.0.0-rc.4] 2022-08-16T21:31:48Z Mike Vesprini <mike@button.is> # Switch order to Firstname Lastname
computed_columns/contact_full_name [computed_columns/contact_full_name@1.0.0-rc.4] 2022-08-17T14:39:31Z Mike Vesprini <mike@button.is> # Switch name order to firstname lastname
functions/handle_default_form_change_commit [tables/form_change] 2022-08-19T22:30:19Z Dylan Leard <dylan@button.is> # Add a default commit function for form_change records
tables/form [functions/handle_default_form_change_commit] 2022-08-19T22:11:02Z Dylan Leard <dylan@button.is> # Add table to house json_schema information for a form and other data regarding how to parse it into tables
mutations/commit_form_change_internal 2022-08-22T17:17:22Z Matthieu Foucault <matthieu@button.is> # Add a function to commit a form_change. Called internally by our database only.
trigger_functions/commit_form_change [trigger_functions/commit_form_change@1.0.0-rc.4] 2022-08-22T17:35:06Z Matthieu Foucault <matthieu@button.is> # delete commit_form_change trigger
mutations/commit_project_revision 2022-08-22T18:20:35Z Matthieu Foucault <matthieu@button.is> # Add a function to commit a project_revision
trigger_functions/commit_project_revision [trigger_functions/commit_project_revision@1.0.0-rc.4] 2022-08-22T18:21:04Z Matthieu Foucault <matthieu@button.is> # delete commit_project_revision trigger
util_functions/import_swrs_operators_from_fdw [util_functions/import_swrs_operators_from_fdw@1.0.0-rc.4] 2022-08-23T18:16:21Z Dylan Leard <dylan@button.is> # Migration: do not rely on trigger to immediately commit the swrs operator form_change record
mutations/update_form_change 2022-08-23T22:54:01Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Custom update function for form_change table to reset the change_status remove it from the allowed parameters
mutations/stage_form_change 2022-08-24T18:17:11Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Mutation to stage a form_change record
mutations/commit_form_change [tables/form_change] 2022-08-24T21:49:44Z Dylan Leard <dylan@button.is> # Custom mutation for the graphql API to commit a form_change record directly from the front-end. For changes to forms not part of project creation/revision.
mutations/add_emission_intensity_report_to_revision [mutations/add_emission_intensity_report_to_revision@1.0.0-rc.4] 2022-08-26T23:55:52Z Dylan Leard <dylan@button.is> # Migration: fix incorrect json_schema_name in mutation
computed_columns/project_revision_tasklist_status_for [computed_columns/project_revision_tasklist_status_for@1.0.0-rc.4] 2022-08-29T21:49:01Z Dylan Leard <dylan@button.is> # Migration: Attention Required status should be the first priority loop exit
tables/amendment_type 2022-08-22T23:55:53Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Table to store different amendment types
tables/project_revision_amendment_type [tables/project_revision tables/amendment_type] 2022-08-23T16:13:22Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Join table to store the amendment type of the project revision
tables/revision_type 2022-08-18T17:08:47Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Adding a table for revision type
tables/amendment_status 2022-08-30T20:46:19Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Create a new table amendment_status
tables/project_revision_001_add_amendment_columns 2022-08-18T17:31:54Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Adding a revision_type column, columns column & amendment_status column to the project_revision table
tables/funding_parameter_002_add_auto_generating_report_date_columns [tables/funding_parameter] 2022-09-02T21:08:44Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add contract_start_date and project_assets_life_end_date to funding_parameter table
computed_columns/project_revision_effective_date 2022-09-12T22:42:51Z Mike Vesprini <mike@button.is> # Create computed column for project revisions effective date
computed_columns/project_revision_rank 2022-08-31T18:41:14Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add project_revision_rank computed column
util_functions/get_form_status_001 2022-09-28T17:47:05Z Gurjeet Matharu <gurjeet@matharuco.com> # Adding coalesc to get_form_status function
mutations/generate_reports 2022-09-21T23:55:42Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Custom mutation to generate annual or quarterly reports based on start and end dates
@1.0.0-rc.5 2022-10-13T17:02:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # release v1.0.0-rc.5
computed_columns/project_revision_type_row_number [tables/project tables/project_revision] 2022-10-13T21:40:32Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add row number computed column based on the revision type
mutations/create_project_revision [mutations/create_project_revision@1.0.0-rc.5] 2022-11-09T18:34:54Z Gurjeet Matharu <gurjeet@matharuco.com> # adding ammendmentn types
tables/payment_001 [tables/payment] 2022-08-30T23:41:40Z Dylan Leard <dylan@button.is> # Migration: rename gross and net amount columns
functions/handle_milestone_form_change_commit [tables/form_change] 2022-08-30T21:03:03Z Dylan Leard <dylan@button.is> # Add custom adapter function to parse the consolidated milestone form_change data into the correct tables
mutations/add_milestone_to_revision [mutations/add_milestone_to_revision@1.0.0-rc.4] 2022-09-12T17:26:22Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Removing unused custom mutation
mutations/discard_milestone_form_change [mutations/discard_milestone_form_change@1.0.0-rc.4] 2022-09-12T17:38:11Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Removing unnecessary discard custom mutation
functions/migration_milestone_form_changes_to_single_form_change 2022-10-05T21:33:26Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # idempotent function called by the migration with the same name. Aggregates the multiple form_changes for milestones(reporting_requirement, payment, milestone) into a new, single milestone form_change
migrations/001_milestone_form_changes_to_single_form_change 2022-10-05T21:24:11Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Migration function and call to move all truples(reporting_requirement, milestone, payment) to a single milestone form_change
tables/form_change_001 [tables/form_change tables/form] 2022-09-01T22:26:46Z Dylan Leard <dylan@button.is> # Migration: json_schema_name is now a foreign key to the form table
computed_columns/project_revision_milestone_report_statuses [computed_columns/project_revision_milestone_report_statuses@1.0.0-rc.5] 2022-10-14T22:59:48Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Updating the computed column for reporting requirement status after the milestone refactor
mutations/commit_form_change_internal [mutations/commit_form_change_internal@1.0.0-rc.5] 2022-10-25T18:36:46Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # commit form change pulls the commit handler from the database
tables/form_001 [tables/form] 2022-10-25T18:49:21Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # updating the commit handler to be a string, to make calling it easier
tables/report_type_002 [tables/report_type_001] 2022-10-27T01:05:08Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Performance Milestone report type is not a milestone
mutations/generate_reports [mutations/generate_reports@1.0.0-rc.5] 2022-10-17T20:19:57Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Casting report auto-generator due date to timestamptz
tables/cif_user_001_drop_policies [tables/cif_user] 2022-11-04T20:53:24Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Dropping policies ahead of changing column type on cif user table
computed_columns/contact_pending_form_change_001_drop_before_cif_user_update [computed_columns/contact_pending_form_change] 2022-11-07T17:27:47Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # dropping function before changing the cif user sub type
computed_columns/operator_pending_form_change_001_drop_before_cif_user_update [computed_columns/operator_pending_form_change] 2022-11-07T19:19:00Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Dropping the computed column before changing the cif_user sub type to text
functions/pending_new_form_change_for_table_001_drop_before_cif_user_update [functions/pending_new_form_change_for_table] 2022-11-07T19:33:29Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Dropping the function before changing the cif_user sub type to text
functions/pending_new_project_revision_001_drop_before_cif_user_update [functions/pending_new_project_revision] 2022-11-07T19:46:10Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Dropping the function before changing the cif_user sub type to text
mutations/create_user_from_session_001_drop_before_cif_user_update [mutations/create_user_from_session] 2022-11-07T19:54:52Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Dropping the mutation before changing the cif_user sub type to text
trigger_functions/set_user_id_001_drop_before_cif_user_update [trigger_functions/set_user_id] 2022-11-07T20:05:09Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Dropping the trigger function before changing the cif_user sub type to text
functions/session_001_drop_function_before_table_update [functions/session] 2022-11-04T21:07:25Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Dropping function before updating type on cif_user table
types/keycloak_jwt [types/keycloak_jwt@1.0.0-rc.5 functions/session_001_drop_function_before_table_update tables/cif_user_001_drop_policies] 2022-11-07T17:02:37Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Changing sub type from uuid to text
tables/cif_user_002_uuid_to_session_sub [tables/cif_user_001_drop_policies tables/cif_user] 2022-11-07T20:15:38Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Change uuid column to session sub as varchar type
trigger_functions/update_timestamps_001_uuid_to_session_sub [trigger_functions/update_timestamps] 2022-11-07T20:44:12Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Change uuid to session_sub
functions/session_002_create_function_after_table_update [functions/session_001_drop_function_before_table_update] 2022-11-07T21:46:34Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # creating function after updating type on cif_user table
computed_columns/contact_pending_form_change_002_create_after_cif_user_update [computed_columns/contact_pending_form_change_001_drop_before_cif_user_update] 2022-11-07T22:30:20Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Creating computed column after updating type on cif_user table
computed_columns/operator_pending_form_change_002_create_after_cif_user_update [computed_columns/operator_pending_form_change_001_drop_before_cif_user_update] 2022-11-07T22:36:52Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Creating computed column after updating type on cif_user table
functions/pending_new_form_change_for_table_002_create_after_cif_user_update [functions/pending_new_form_change_for_table_001_drop_before_cif_user_update] 2022-11-07T22:40:53Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Creating function after updating type on cif_user table
functions/pending_new_project_revision_002_create_after_cif_user_update [functions/pending_new_project_revision_001_drop_before_cif_user_update] 2022-11-07T22:48:34Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Creating function after updating type on cif_user table
trigger_functions/set_user_id_002_create_after_cif_user_update [trigger_functions/set_user_id_001_drop_before_cif_user_update] 2022-11-07T22:58:39Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Creating trigger function after updating type on cif_user table
tables/cif_user_003_create_policies [tables/cif_user] 2022-11-07T23:03:59Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Creating policies after changing column type on cif user table
computed_columns/form_change_calculated_gross_amount_this_milestone [tables/form_change] 2022-11-10T23:15:39Z Dylan Leard <dylan@button.is> # Add computed column to return the calculated gross payment amount for a given milestone
computed_columns/form_change_calculated_holdback_amount_this_milestone [tables/form_change] 2022-11-10T23:32:34Z Dylan Leard <dylan@button.is> # Add computed column to calculate the holdback amount for a particular milestone
computed_columns/form_change_calculated_net_amount_this_milestone [tables/form_change] 2022-11-10T23:38:16Z Dylan Leard <dylan@button.is> # Add computed column to return the calculated net payment amount for a particular milestone
mutations/delete_project_revision 2022-11-09T20:19:32Z Gurjeet Matharu <gurjeet@matharuco.com> # deletes project revision and coresponding project revision amendments
tables/project_revision_002_add_delete_permissions 2022-11-10T19:53:53Z Gurjeet Matharu <gurjeet@matharuco.com># adding delete permissions to project revision amendment type
mutations/generate_quarterly_reports 2022-11-08T19:55:13Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Custom mutation to generate quarterly reports based on start and end dates
mutations/generate_annual_reports 2022-11-14T18:44:55Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Custom mutation to generate annual reports based on start and end dates
tables/project_002_add_contract_number 2022-11-18T17:45:15Z Mike Vesprini <mike@button.is> # Add contract_number column
computed_columns/form_change_as_project [computed_columns/form_change_as_project@1.0.0-rc.5] 2022-11-21T18:39:44Z Mike Vesprini <mike@button.is> # Handle contract_number column being added to project table
computed_columns/project_primary_managers 2022-11-22T15:24:51Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add computed column to concatenate the full names of all project managers of a project
trigger_functions/cif_user_session_sub_immutable_with_flag 2022-11-25T23:30:15Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Trigger function to prevent session_sub to be updated on a cif_user record, if the allow_sub_update flag is false
tables/cif_user_004_allow_sub_update_flag [tables/cif_user_003_create_policies] 2022-11-25T22:25:14Z Bastianelli, Pierre LWRS:EX <pierre.bastianelli@gov.bc.ca> # Adding a flag to track whether the user is allowed to change a user record's session_sub
mutations/update_or_create_user_from_session 2022-11-23T18:18:56Z Bastianelli, Pierre LWRS:EX <pierre.bastianelli@gov.bc.ca> # Mutation to update or create a user upon login, based on the email field of the session jwt
@1.0.0 2022-11-29T20:53:00Z Dylan Leard <dylan@button.is> # release v1.0.0
mutations/update_or_create_user_from_session [mutations/update_or_create_user_from_session@1.0.0] 2022-11-29T23:55:46Z Dylan Leard <dylan@button.is> # Update permissions for user function
@1.0.1 2022-11-30T00:22:17Z Dylan Leard <dylan@button.is> # release v1.0.1
data/insert_json_schema_form_data [functions/handle_milestone_form_change_commit tables/form] 2023-01-03T23:35:44Z Dylan Leard <dylan@button.is> # Migration: insert json-schema form data into the cif.form table
tables/full_backup_log [schemas/private] 2022-11-23T21:58:32Z Dylan Leard <dylan@button.is> # Add a log table to track timestamps to be used when validating the integrity of our database backups
tables/project_revision_003_set_amendment_statuses 2022-11-08T17:13:48Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Set amendment_status defaults and update current records' amendment_status
tables/revision_status 2022-11-09T19:51:54Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Rename amendment_status table to revision_status
mutations/commit_project_revision [mutations/commit_project_revision@1.0.1] 2022-11-30T14:31:42Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Make commit_project_revision set amendment_status
mutations/create_project [mutations/create_project@1.0.1] 2022-11-30T14:33:05Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Make create_project set revision_status to Draft on create
mutations/create_project_revision [mutations/create_project_revision@1.0.1] 2022-11-30T15:44:24Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Make create_project_revision set revision_status to Draft
computed_columns/project_revision_total_project_value 2022-11-17T23:05:30Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add computed column to return the calculated total project value
tables/funding_parameter_003_drop_total_project_value_column [tables/funding_parameter] 2022-11-23T21:17:14Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Dropping redundant column as it trurned into a computed column
mutations/discard_additional_funding_source_form_change [tables/form_change tables/project_revision] 2022-11-24T20:02:12Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # A customized discard mutation for additional funding sources
computed_columns/form_change_eligible_expenses_to_date [tables/form_change] 2022-11-14T23:10:26Z Dylan Leard <dylan@button.is> # Add computed column to return the cumulative eligible expenses to date for a milestone
computed_columns/form_change_gross_payments_to_date [tables/form_change] 2022-11-14T23:55:50Z Dylan Leard <dylan@button.is> # Add computed column to retrieve the sum of all gross payemnts to date for a milestone
computed_columns/form_change_net_payments_to_date [tables/form_change] 2022-11-15T00:09:28Z Dylan Leard <dylan@button.is> # Add computed colum to return the cumulative net payments made to date for a milestone
computed_columns/form_change_holdback_amount_to_date [tables/form_change] 2022-11-15T00:19:02Z Dylan Leard <dylan@button.is> # Add computed column to return the cumulative holdback amount to date for a milestone
tables/project_revision_004_add_pending_actions_from 2022-11-28T21:21:29Z Gurjeet Matharu <gurjeet@matharuco.com> # adding pending actions from column
mutations/delete_project_revision [mutations/delete_project_revision@1.0.1] 2023-01-04T20:11:30Z Dylan Leard <dylan@button.is> # Migration: remove unnecessary begin-end statements
util_functions/get_form_status_001 [util_functions/get_form_status_001@1.0.1] 2022-12-29T17:10:00Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add conditionals to determine project overview status
@1.0.2 2023-01-05T17:08:21Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # release v1.0.2
@1.1.0 2023-01-10T22:23:39Z Sam Warren <samwarren4@gmail.com> # release v1.1.0
@1.1.1 2023-01-11T18:56:52Z Dylan Leard <dylan@button.is> # release v1.1.1
@1.1.2 2023-01-11T23:21:59Z Dylan Leard <dylan@button.is> # release v1.1.2
@1.1.3 2023-01-16T18:04:35Z Dylan Leard <dylan@button.is> # release v1.1.3
data/insert_json_schema_form_data_update_milestone_form_field_titles 2023-01-16T21:53:29Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Update milestone form field titles and adjusted/calculated in json_schema
mutations/update_milestone_form_change 2023-01-17T21:15:30Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Create update milestone form change mutation
@1.1.4 2023-01-18T16:57:57Z Dylan Leard <dylan@button.is> # release v1.1.4
trigger_functions/funding_stream_is_immutable 2023-01-09T17:21:03Z Mike Vesprini <mike@button.is> # trigger function to prevent funding stream from changing once a project has been created
tables/project_003_add_immutable_funding_stream_trigger 2023-01-10T22:05:45Z Mike Vesprini <mike@button.is> # Add funding_stream_immutable trigger to project table
mutations/undo_form_changes [mutations/undo_form_changes@1.1.4] 2023-01-18T20:46:21Z Mike Vesprini <mike@button.is> # Keep the funding stream when undo_changes used on a new project form
functions/handle_default_form_change_commit [functions/handle_default_form_change_commit@1.1.4] 2023-01-20T21:33:42Z Dylan Leard <dylan@button.is> # Rework: Function should not attempt to insert deprecated columns into tables
@1.2.0 2023-01-23T23:41:19Z Dylan Leard <dylan@button.is> # release v1.2.0
mutations/discard_funding_parameter_form_change [mutations/discard_funding_parameter_form_change@1.2.0] 2023-01-16T22:04:00Z Mike Vesprini <mike@button.is> # Remove additional funding sources as well
tables/funding_stream_rfp_project_status_001_drop_table [tables/funding_stream_rfp_project_status] 2023-01-09T23:36:19Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Dropping table in favor of creating a new join table with funding_stream and project_status
tables/project_status_001_update_harcoded_values [tables/project_status] 2023-01-06T23:32:45Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Updating project status hardcoded values and adding new ones based on funding stream
tables/funding_stream_project_status [tables/project_status tables/funding_stream] 2023-01-10T00:26:37Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add join table with funding_stream and project_status
util_functions/get_fiscal_year_from_timestamp 2022-08-11T23:19:28Z Dylan Leard <dylan@button.is> # Add helper function that ingests a timestamp and returns the fiscal year in format YYYY/YYYY
types/sum_by_fiscal_year 2022-08-12T20:17:59Z Dylan Leard <dylan@button.is> # Add return type for the computed column anticipated_funding_amount_by_fiscal_year
computed_columns/project_revision_anticipated_funding_amount_per_fiscal_year 2022-08-11T20:47:39Z Dylan Leard <dylan@button.is> # Computed column to return a set containing the anticipated funding amount per each fiscal year
computed_columns/form_change_calculated_ei_performance 2023-01-24T22:38:30Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Create a function that calculates EI performance from form changes
computed_columns/project_revision_teimp_payment_percentage [computed_columns/project_revision_teimp_payment_percentage@1.2.0] 2023-01-25T20:07:40Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Make project_revision_teimp_payment_percentage use form_change_calculated_ei_performance instead of deprecated function
computed_columns/emission_intensity_report_calculated_ei_performance [computed_columns/emission_intensity_report_calculated_ei_performance@1.2.0] 2023-01-24T22:31:03Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Deprecate the emission_intensity_report_calculated_ei_performance computed column
@1.3.0 2023-01-31T22:43:21Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # release v1.3.0
computed_columns/form_change_payment_percentage 2023-01-11T15:33:18Z Gurjeet Matharu <gurjeet@matharuco.com> # Payment Percentage of Performance Milestone Amount (%) added as a computed column, form_change_payment_percentage
@1.4.0 2023-02-08T20:41:09Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # release v1.4.0
mutations/create_project_revision [mutations/create_project_revision@1.4.0] 2023-02-14T22:47:17Z Dylan Leard <dylan@button.is> # Migration: change parameter default
tables/project_revision_005_correct_revision_type [tables/project_revision_004_add_pending_actions_from] 2023-02-14T22:49:43Z Dylan Leard <dylan@button.is> # Migration: set revision_type column values to correct value
@1.4.1 2023-02-14T23:23:23Z Dylan Leard <dylan@button.is> # release v1.4.1
data/insert_json_schema_form_data_separate_EP_and_IA_funding_schemas 2023-01-31T17:19:29Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Create separate schemas for EP and IA funding stream funding forms
computed_columns/form_change_calculated_total_payment_amount_to_date 2023-01-31T21:33:27Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Computed column to calculate total payment amount to date (IA funding stream only)
functions/funding_form_changes_to_separate_schemas 2023-02-02T22:52:06Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Function to update json_schema_name to specify funding stream
migrations/002_separate_funding_schemas_for_EP_and_IA 2023-02-02T16:34:18Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Migration to update json_schema_name for funding stream forms to separate them by EP and IA funding streams
mutations/create_project_revision [mutations/create_project_revision@1.4.1] 2023-02-15T23:31:52Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Update function to add either EP or IA version of the funding form schema
computed_columns/project_next_milestone_due_date 2023-02-07T22:50:15Z Sam Warren <samwarren4@gmail.com> # Computed column to return the next milestone due date for a given project
data/002_insert_json_schema_form_data_remove_default_from_annual_report_schema 2023-02-13T21:08:47Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Remove the default values in the reporting requirement json schema
@1.5.0 2023-03-03T18:11:48Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # release v1.5.0
data/005_insert_json_schema_form_data_remove_undefined_from_project_contact_schema 2023-02-28T19:43:24Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # # Remove the default and anyof value in the project contact json schema
@1.5.1 2023-03-06T22:36:45Z Dylan Leard <dylan@button.is> # release v1.5.1
@1.5.2 2023-03-07T23:23:58Z Dylan Leard <dylan@button.is> # release v1.5.2
data/006_json_form_data_remove_default_undefined_from_project_manager_schema 2023-03-15T19:21:20Z Gurjeet Matharu <gurjeet@matharuco.com> # Remove the default and anyof value in the project manager json schema
computed_columns/form_change_payment_percentage [computed_columns/form_change_payment_percentage@1.5.1] 2023-03-16T17:37:26Z Sam Warren <samwarren4@gmail.com> # Update payment percentage computed column to only return values between 0% and 100%
@1.5.3 2023-03-21T23:20:42Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # release v1.5.3
tables/report_type_003 2023-01-31T00:01:02Z Thomas Mastromonaco <thomas@button.is> # Add summary report to the report type table
functions/handle_project_summary_report_form_change_commit 2023-02-02T23:54:40Z Thomas Mastromonaco <thomas@button.is> # custom commit handler for the project summary form
data/insert_json_schema_form_data_project_summary 2023-02-02T23:59:58Z Thomas Mastromonaco <thomas@button.is> # add json schema form data for the project summary report
mutations/create_project_revision [mutations/create_project_revision@1.5.1] 2023-03-14T22:13:05Z Thomas Mastromonaco <thomas@button.is> # Add project summary reporting requirement
data/insert_json_schema_form_dependency_update_milestone_form_total_eligible_expenses 2023-03-16T18:12:53Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Update milestone form dependency to not show total_eligible_expenses field on advanced milestone types
mutations/update_milestone_form_change [mutations/update_milestone_form_change@1.5.1] 2023-03-21T21:17:39Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # update change handler to set total_eligible_expenses to null if report type is not general milestone
@1.6.0 2023-03-29T20:51:28Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # release v1.6.0
