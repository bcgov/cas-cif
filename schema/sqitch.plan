%syntax-version=1.0.0
%project=cif
%uri=https://github.com/bcgov/cif


create_roles 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the roles used by the application
schemas/main 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif schema
schemas/private 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private schema
util_functions/verify_function_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_function_not_present function
util_functions/verify_grant 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_grant function
util_functions/verify_policy 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_policy function
util_functions/verify_policy_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_policy_not_present function
util_functions/verity_type_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verity_type_not_present function
util_functions/grant_permissions 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.grant_permissions function
util_functions/read_only_user_policies 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.read_only_user_policies function
util_functions/upsert_policy 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.upsert_policy function
tables/connect_session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.connect_session table
types/keycloak_jwt 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.keycloak_jwt type
functions/session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.session function
trigger_functions/update_timestamps 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.update_timestamps trigger function
trigger_functions/archived_records_are_immutable 2022-01-06T18:37:08Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A trigger to ensure that no changes to a deleted record can be saved
trigger_functions/set_previous_form_change_id [schemas/private] 2022-03-21T23:04:27Z Dylan Leard <dylan@button.is> # Trigger function sets the previous_form_change_id fkey on insert
util_functions/upsert_timestamp_columns [schemas/private trigger_functions/update_timestamps] 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the upsert_timestamp_columns function
tables/cif_user 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.cif_user table
trigger_functions/set_user_id 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.set_user_id trigger function
mutations/create_user_from_session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.create_user_from_session mutation function
tables/sector [schemas/main] 2022-06-14T21:28:12Z Dylan Leard <dylan@button.is> # Table for industry sectors used by the CleanBC Industry Fund
tables/funding_stream 2021-12-01T05:19:11Z Alex Zorkin <alex@bigthink.io> # adding funding_stream table to plan
tables/funding_stream_rfp 2021-12-15T00:47:25Z Alex Zorkin <alex@bigthink.io> # add funding stream rfp table
tables/project_status 2021-12-21T21:19:31Z Alex Zorkin <alex@bigthink.io> # creating project_status table
tables/funding_stream_rfp_project_status 2022-01-12T20:47:40Z Alex Zorkin <alex@bigthink.io> # adding cross table between funding_stream_rfp and project_status
trigger_functions/operator_swrs_organisation_is_immutable 2022-02-17T21:46:04Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # swrs_operation_id column is immutable on the operator table
tables/operator [schemas/main] 2021-11-30T22:34:14Z Dylan Leard <dylan@button.is> # Create the cif.operator table
tables/project [tables/operator] 2021-11-04T20:34:23Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Create the project table
util_functions/camel_to_snake_case 2021-12-11T00:37:54Z Matthieu Foucault <matthieu@button.is> # Add cif_private.camel_to_snake_case
types/form_change_operation 2022-02-04T22:17:52Z Matthieu Foucault <matthieu@button.is> # add enum type for form_change.operation column
trigger_functions/commit_form_change [schemas/private util_functions/camel_to_snake_case types/form_change_operation] 2021-11-08T22:54:27Z Dylan Leard <dylan@button.is> # Trigger function to apply changes to a table once the change has been committed
tables/change_status [schemas/main] 2021-11-08T22:46:03Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Table to constrain the status of a form_change row
trigger_functions/committed_changes_are_immutable 2022-01-06T23:40:27Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Trigger to prevent committed changes from being altered
trigger_functions/commit_project_revision 2021-12-07T00:37:33Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A trigger function executed when a whole project revision is committed, triggering commit on the individual form_change records
tables/project_revision 2021-12-07T00:39:51Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A table to track global project revisions - containing multiple changes
tables/form_change [tables/change_status trigger_functions/set_previous_form_change_id] 2021-11-04T20:58:49Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Form history table to track changes to records
tables/attachment 2021-11-24T21:24:45Z Alex Zorkin <alex@bigthink.io> # Add schema for attachments
tables/contact 2022-01-19T22:40:59Z Matthieu Foucault <matthieu@button.is> # add contact table
tables/project_contact 2022-01-21T20:45:52Z Matthieu Foucault <matthieu@button.is> # add an association table for projects and contacts
computed_columns/contact_full_name 2022-01-21T21:33:00Z Matthieu Foucault <matthieu@button.is> # add a computed column for a contact's full name
computed_columns/contact_full_phone 2022-01-21T21:33:18Z Matthieu Foucault <matthieu@button.is> # add a computed column for a contact's full phone number
computed_columns/project_revision_project_form_change [tables/project_revision] 2021-12-09T18:55:14Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column to retrieve the form change related to the project record, within a project revision
functions/pending_new_project_revision 2021-12-22T23:40:21Z Matthieu Foucault <matthieu@button.is> # add function returning a pending new project revision created by the current user
mutations/create_form_change 2022-02-01T00:52:42Z Matthieu Foucault <matthieu@button.is> # add custom mutation to create a form change
computed_columns/contact_pending_form_change 2022-02-07T18:30:37Z Matthieu Foucault <matthieu@button.is> # add a computed column returning the pending form_change for a given contact
mutations/add_contact_to_revision 2022-01-27T23:48:16Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Custom mutation that prepopulates an insert to the form change table for a new contact on a a project revision
util_functions/import_swrs_operators_from_fdw 2022-02-28T19:55:13Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # a function importing operators from existing reports and operators swrs data tables. Meant to be used in conjunction with a foreign data wrapper, as setup in util_functions/import_swrs_operators
util_functions/import_swrs_operators [tables/operator schemas/private] 2022-02-09T17:17:00Z Dylan Leard <dylan@button.is> # Add function to import operators from swrs using a foreign data wrapper
tables/project_manager_label [schemas/main] 2022-02-17T23:44:42Z Dylan Leard <dylan@button.is> # Table contains the possible labels that a cif_user can be assigned to as a manager of a project
tables/project_manager 2021-11-30T22:00:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A table to track project manager assignments to projects
mutations/create_project [tables/project] 2021-11-09T21:34:55Z Dylan Leard <dylan@button.is> # Custom mutation to create a project
types/manager_form_changes_by_label_composite_return [schemas/main] 2022-02-18T20:58:37Z Dylan Leard <dylan@button.is> # Add custom composite return type for computed column project_revision_project_manager_form_changes_by_label
computed_columns/project_revision_project_manager_form_changes_by_label [tables/project_revision tables/project_manager] 2022-02-18T21:32:45Z Dylan Leard <pierre.bastianelli@gov.bc.ca> # Computed column to retrieve the set of form changes related to the project manager association by project_manager_label, within a project revision
computed_columns/project_pending_project_revision 2022-02-16T17:14:03Z Matthieu Foucault <matthieu@button.is> # add a computed column to return a pending revision for a project
computed_columns/operator_pending_form_change 2022-02-16T21:48:38Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A computed column returning a potential existing form change for an operator, scoped by the current user
functions/pending_new_form_change_for_table 2022-03-05T00:09:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # a custom query that returns a pending form change for the current user for a given table name. Allows to resume an object creation
mutations/create_project_revision 2022-02-24T19:17:45Z Matthieu Foucault <matthieu@button.is> # add function to create a project revision for a given project
computed_columns/form_change_is_unique_value 2022-03-11T22:54:06Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A computed column that returns whether a column name already has a value in the database
computed_columns/form_change_parent_form_change_from_revision [tables/form_change] 2022-03-23T18:42:00Z Dylan Leard <dylan@button.is> # Function returns a parent form_change record
computed_columns/cif_user_full_name 2022-03-21T20:23:37Z Gurjeet Matharu <gurjeet@matharuco.com> # A computed function for contact and cif_user providing full name
computed_columns/form_change_is_pristine 2022-04-18T23:26:43Z Gurjeet Matharu <gurj@Ggurjeet@matharuco.com> # Add is_prestine computed col to form_change
computed_columns/form_change_as_project [tables/project tables/form_change] 2022-04-26T21:56:35Z Dylan Leard <dylan@button.is> # Computed column returns data from the new_form_data column as if it were a project to allow graph traversal
computed_columns/form_change_as_project_contact [tables/project tables/contact tables/form_change] 2022-04-27T00:04:24Z Dylan Leard <dylan@button.is> # Computed column returns a project_contact record type for a contact form_change
computed_columns/form_change_as_project_manager [tables/form_change tables/project_manager] 2022-04-29T21:10:14Z Dylan Leard <dylan@button.is> # Computed column returns a project_manager record type for a project_manager form_change
tables/report_type 2022-05-02T17:29:36Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Create the cif.report_type table
tables/reporting_requirement 2022-04-29T22:15:51Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Create the cif.reporting_requirement table
tables/payment 2022-05-02T19:01:17Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Create the cif.payment table
computed_columns/project_latest_committed_project_revision [tables/project tables/project_revision] 2022-05-02T18:21:58Z Mike Vesprini <mike@button.is> # A computed column returning the latest committed revision for a project
util_functions/get_form_status [tables/form_change] 2022-05-04T21:17:49Z Dylan Leard <dylan@button.is> # Helper function returns the status for a form_change
computed_columns/project_revision_tasklist_status_for 2022-05-10T21:56:17Z Brianna Cerkiewicz <brianna@button.is> # Computed column to return a tasklist status for any tasklist form
computed_columns/project_revision_form_changes_for [tables/form_change tables/project_revision] 2022-05-16T21:52:59Z Dylan Leard <dylan@button.is> # Computed column dynamically retrieves a set of form_change records relating to a project revision
mutations/undo_form_changes 2022-05-24T21:49:12Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add custom mutation to undo form changes in a project revision
computed_columns/form_change_as_reporting_requirement 2022-05-14T00:24:44Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Casts a form_change record as a cif.reporting_requirement type, so we can traverse it with graphql queries
computed_columns/project_revision_upcoming_reporting_requirement_form_change 2022-05-16T21:56:32Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # computed column returning the form_change for the next due reporting requirement, optionally filtered by report type
computed_columns/form_change_reporting_requirement_status [tables/form_change] 2022-06-06T20:20:47Z Dylan Leard <dylan@button.is> # Computed column returns a status for a reporting requirement form_change record based on due_date and received_date
mutations/stage_dirty_form_changes 2022-04-29T22:59:08Z Matthieu Foucault <matthieu@button.is> # add a mutation to automatically stage all the dirty form changes of a project_revision
types/milestone_report_status_return 2022-06-01T16:57:00Z Dylan Leard <dylan@button.is> # Return type for project_revision_milestone_report_statuses
computed_columns/project_revision_milestone_report_statuses [tables/form_change] 2022-05-31T23:23:44Z Dylan Leard <dylan@button.is> # Computed column to return both form completion statuses and reporting requirement statuses for individual milestones and an overall completion status
tables/emission_intensity_payment_percent [schemas/main] 2022-06-22T18:02:47Z Dylan Leard <dylan@button.is> # Lookup table to map emission intensity performance to payment percentage
tables/emission_intensity_report [tables/reporting_requirement] 2022-06-22T20:29:25Z Dylan Leard <dylan@button.is> # Table for emission intensity report data
tables/milestone_report [tables/reporting_requirement] 2022-06-22T21:01:22Z Dylan Leard <dylan@button.is> # Table containing data for milestone reports
mutations/add_milestone_to_revision [tables/reporting_requirement tables/form_change] 2022-06-23T23:26:45Z Dylan Leard <dylan@button.is> # A custom mutation chain to create form_change records for multiple tables when creating a milestone
mutations/discard_milestone_form_change [tables/form_change tables/project_revision] 2022-06-24T16:25:29Z Dylan Leard <dylan@button.is> # Custom mutation to discard a set of form_change records relating to a milestone_report
tables/funding_parameter 2022-06-23T17:34:25Z Gurjeet Matharu <gurjeet@matharuco.com> # funding parameter table
computed_columns/reporting_requirement_has_expenses [tables/report_type tables/reporting_requirement] 2022-07-06T22:31:55Z Mike Vesprini <mike@button.is> # Computed column returns true if the report type of the reporting requirement has payments associated with it
@1.0.0-rc.1 2022-07-14T17:26:21Z Dylan Leard <dylan@button.is> # release v1.0.0-rc.1
@1.0.0-rc.2 2022-07-14T18:23:38Z Dylan Leard <dylan@button.is> # release v1.0.0-rc.2
mutations/undo_form_changes [mutations/undo_form_changes@1.0.0-rc.1] 2022-07-19T23:31:18Z Mike Vesprini <mike@button.is> # Handle empty project form
util_functions/get_form_status [util_functions/get_form_status@1.0.0-rc.1] 2022-07-19T23:33:37Z Mike Vesprini <mike@button.is> # Empty project forms return not started
computed_columns/project_revision_project_manager_form_changes_by_label [computed_columns/project_revision_project_manager_form_changes_by_label@1.0.0-rc.1] 2022-07-25T20:35:46Z Dylan Leard <dylan@button.is> # Migration: explicitly order return object
mutations/add_emission_intensity_report_to_revision 2022-07-19T20:38:25Z Gurjeet Matharu <gurjeet@matharuco.com> # Custom mutation to add an emission intensity report form change and reporting requirement formchange.
tables/report_type_001 [tables/report_type] 2022-07-19T20:48:05Z Gurjeet Matharu <gurjeet@matharuco.com> # Adding an TEIMP report type.
mutations/discard_emission_intensity_report 2022-07-19T21:06:39Z Gurjeet Matharu <gurjeet@matharuco.com> # Discarding emission intensitry report and coresponding reporting requirement
computed_columns/project_revision_milestone_report_statuses [computed_columns/project_revision_milestone_report_statuses@1.0.0-rc.1] 2022-07-22T22:10:58Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Excluding archived form changes
computed_columns/project_revision_upcoming_reporting_requirement_form_change [computed_columns/project_revision_upcoming_reporting_requirement_form_change@1.0.0-rc.1] 2022-07-22T22:12:33Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Excluding archived form changes
mutations/create_project_revision [mutations/create_project_revision@1.0.0-rc.1] 2022-07-29T21:25:54Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add missing emission intesnity report union
computed_columns/emission_intensity_report_calculated_ei_performance 2022-07-27T20:07:35Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Returns the calculated EI intensity value
computed_columns/form_change_as_emission_intensity_report 2022-08-03T17:12:52Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Computed column to return form change as emission intensity report type
@1.0.0-rc.3 2022-08-08T22:14:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # release v1.0.0-rc.3
mutations/discard_funding_parameter_form_change 2022-08-10T23:11:54Z Gurjeet Matharu <gurjeet@matharuco.com> # Discarding funding parameter form change
@1.0.0-rc.4 2022-08-15T18:49:49Z Dylan Leard <dylan@button.is> # release v1.0.0-rc.4
tables/project_type 2022-08-08T18:26:33Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Adding a table for project type
tables/project_001 2022-08-08T15:28:44Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add a score and project type column to the project table
computed_columns/form_change_as_project [computed_columns/form_change_as_project@1.0.0-rc.1 tables/project_001] 2022-08-08T21:44:08Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add score and project type to project computed column
tables/funding_parameter_001 2022-08-10T18:55:07Z Brianna Cerkiewicz <briannacerkiewicz@pop-os> # Add proponent cost field to funding_parameter table
computed_columns/project_revision_gross_payment_amount 2022-07-29T21:34:20Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column returning the sum of all gross amounts paid out for a project revision
computed_columns/project_revision_net_payment_amount 2022-07-29T21:36:02Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column returning the sum of all net amounts paid for a project revision
computed_columns/project_revision_teimp_payment_percentage 2022-07-30T00:00:47Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column returning the teimp payment percentage for a project revision, according to the formula and table defined in schedule G
computed_columns/project_revision_teimp_payment_amount 2022-08-03T23:47:46Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column to return the total teimp payment amount to date, based on the payment percentage and the gross and net payment amounts from the milestones
tables/emission_intensity_report_001 [tables/emission_intensity_report] 2022-08-10T17:56:52Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Adding a column for adjusted TEIMP holdback payment
computed_columns/form_change_as_emission_intensity_report [computed_columns/form_change_as_emission_intensity_report@1.0.0-rc.3] 2022-08-10T18:24:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Adding the adjusted holdback payment column
computed_columns/emission_intensity_report_calculated_ei_performance [computed_columns/emission_intensity_report_calculated_ei_performance@1.0.0-rc.4] 2022-08-17T23:55:28Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Addressing a bug where order of operations was ambiguous for postgres
tables/additional_funding_source_status 2022-08-16T17:26:13Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Table for statuses related to additional funding sources
tables/additional_funding_source 2022-08-11T15:49:26Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Table for storing additional funding sources data
mutations/add_additional_funding_source_to_revision 2022-08-11T20:07:28Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Custom mutation that prepopulates an insert to the form change table for a new funding source on a project revision
mutations/create_project_revision [mutations/create_project_revision@1.0.0-rc.4] 2022-08-17T23:16:56Z Sepehr Sobhani <sepehr.sobhani@gov.bc.ca> # Add missing additional funding resource union
computed_columns/cif_user_full_name [computed_columns/cif_user_full_name@1.0.0-rc.4] 2022-08-16T21:31:48Z Mike Vesprini <mike@button.is> # Switch order to Firstname Lastname
computed_columns/contact_full_name [computed_columns/contact_full_name@1.0.0-rc.4] 2022-08-17T14:39:31Z Mike Vesprini <mike@button.is> # Switch name order to firstname lastname
functions/handle_default_form_change_commit [tables/form_change] 2022-08-19T22:30:19Z Dylan Leard <dylan@button.is> # Add a default commit function for form_change records
tables/form [functions/handle_default_form_change_commit] 2022-08-19T22:11:02Z Dylan Leard <dylan@button.is> # Add table to house json_schema information for a form and other data regarding how to parse it into tables
