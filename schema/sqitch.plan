%syntax-version=1.0.0
%project=cif
%uri=https://github.com/bcgov/cif


create_roles 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the roles used by the application
schemas/main 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif schema
schemas/private 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private schema
util_functions/verify_function_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_function_not_present function
util_functions/verify_grant 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_grant function
util_functions/verify_policy 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_policy function
util_functions/verify_policy_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verify_policy_not_present function
util_functions/verity_type_not_present 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.verity_type_not_present function
util_functions/grant_permissions 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.grant_permissions function
util_functions/read_only_user_policies 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.read_only_user_policies function
util_functions/upsert_policy 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.upsert_policy function
tables/connect_session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.connect_session table
types/keycloak_jwt 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.keycloak_jwt type
functions/session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.session function
trigger_functions/update_timestamps 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.update_timestamps trigger function
trigger_functions/archived_records_are_immutable 2022-01-06T18:37:08Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A trigger to ensure that no changes to a deleted record can be saved
trigger_functions/set_previous_form_change_id [schemas/private] 2022-03-21T23:04:27Z Dylan Leard <dylan@button.is> # Trigger function sets the previous_form_change_id fkey on insert
util_functions/upsert_timestamp_columns [schemas/private trigger_functions/update_timestamps] 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the upsert_timestamp_columns function
tables/cif_user 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.cif_user table
trigger_functions/set_user_id 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif_private.set_user_id trigger function
mutations/create_user_from_session 2021-10-21T16:10:32Z Matthieu Foucault <matthieu@button.is> # Create the cif.create_user_from_session mutation function
tables/funding_stream 2021-12-01T05:19:11Z Alex Zorkin <alex@bigthink.io> # adding funding_stream table to plan
tables/funding_stream_rfp 2021-12-15T00:47:25Z Alex Zorkin <alex@bigthink.io> # add funding stream rfp table
tables/project_status 2021-12-21T21:19:31Z Alex Zorkin <alex@bigthink.io> # creating project_status table
tables/funding_stream_rfp_project_status 2022-01-12T20:47:40Z Alex Zorkin <alex@bigthink.io> # adding cross table between funding_stream_rfp and project_status
trigger_functions/operator_swrs_organisation_is_immutable 2022-02-17T21:46:04Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # swrs_operation_id column is immutable on the operator table
tables/operator [schemas/main] 2021-11-30T22:34:14Z Dylan Leard <dylan@button.is> # Create the cif.operator table
tables/project [tables/operator] 2021-11-04T20:34:23Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Create the project table
util_functions/camel_to_snake_case 2021-12-11T00:37:54Z Matthieu Foucault <matthieu@button.is> # Add cif_private.camel_to_snake_case
types/form_change_operation 2022-02-04T22:17:52Z Matthieu Foucault <matthieu@button.is> # add enum type for form_change.operation column
trigger_functions/commit_form_change [schemas/private util_functions/camel_to_snake_case types/form_change_operation] 2021-11-08T22:54:27Z Dylan Leard <dylan@button.is> # Trigger function to apply changes to a table once the change has been committed
tables/change_status [schemas/main] 2021-11-08T22:46:03Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Table to constrain the status of a form_change row
trigger_functions/committed_changes_are_immutable 2022-01-06T23:40:27Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Trigger to prevent committed changes from being altered
trigger_functions/commit_project_revision 2021-12-07T00:37:33Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A trigger function executed when a whole project revision is committed, triggering commit on the individual form_change records
tables/project_revision 2021-12-07T00:39:51Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A table to track global project revisions - containing multiple changes
tables/form_change [tables/change_status trigger_functions/set_previous_form_change_id] 2021-11-04T20:58:49Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Form history table to track changes to records
tables/attachment 2021-11-24T21:24:45Z Alex Zorkin <alex@bigthink.io> # Add schema for attachments
tables/contact 2022-01-19T22:40:59Z Matthieu Foucault <matthieu@button.is> # add contact table
tables/project_contact 2022-01-21T20:45:52Z Matthieu Foucault <matthieu@button.is> # add an association table for projects and contacts
computed_columns/contact_full_name 2022-01-21T21:33:00Z Matthieu Foucault <matthieu@button.is> # add a computed column for a contact's full name
computed_columns/contact_full_phone 2022-01-21T21:33:18Z Matthieu Foucault <matthieu@button.is> # add a computed column for a contact's full phone number
computed_columns/project_revision_project_form_change [tables/project_revision] 2021-12-09T18:55:14Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Computed column to retrieve the form change related to the project record, within a project revision
functions/pending_new_project_revision 2021-12-22T23:40:21Z Matthieu Foucault <matthieu@button.is> # add function returning a pending new project revision created by the current user
mutations/create_form_change 2022-02-01T00:52:42Z Matthieu Foucault <matthieu@button.is> # add custom mutation to create a form change
computed_columns/contact_pending_form_change 2022-02-07T18:30:37Z Matthieu Foucault <matthieu@button.is> # add a computed column returning the pending form_change for a given contact
mutations/add_contact_to_revision 2022-01-27T23:48:16Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # Custom mutation that prepopulates an insert to the form change table for a new contact on a a project revision
util_functions/import_swrs_operators_from_fdw 2022-02-28T19:55:13Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # a function importing operators from existing reports and operators swrs data tables. Meant to be used in conjunction with a foreign data wrapper, as setup in util_functions/import_swrs_operators
util_functions/import_swrs_operators [tables/operator schemas/private] 2022-02-09T17:17:00Z Dylan Leard <dylan@button.is> # Add function to import operators from swrs using a foreign data wrapper
tables/project_manager_label [schemas/main] 2022-02-17T23:44:42Z Dylan Leard <dylan@button.is> # Table contains the possible labels that a cif_user can be assigned to as a manager of a project
tables/project_manager 2021-11-30T22:00:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A table to track project manager assignments to projects
mutations/create_project [tables/project] 2021-11-09T21:34:55Z Dylan Leard <dylan@button.is> # Custom mutation to create a project
types/manager_form_changes_by_label_composite_return [schemas/main] 2022-02-18T20:58:37Z Dylan Leard <dylan@button.is> # Add custom composite return type for computed column project_revision_project_manager_form_changes_by_label
computed_columns/project_revision_project_manager_form_changes_by_label [tables/project_revision tables/project_manager] 2022-02-18T21:32:45Z Dylan Leard <pierre.bastianelli@gov.bc.ca> # Computed column to retrieve the set of form changes related to the project manager association by project_manager_label, within a project revision
computed_columns/project_pending_project_revision 2022-02-16T17:14:03Z Matthieu Foucault <matthieu@button.is> # add a computed column to return a pending revision for a project
computed_columns/operator_pending_form_change 2022-02-16T21:48:38Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A computed column returning a potential existing form change for an operator, scoped by the current user
functions/pending_new_form_change_for_table 2022-03-05T00:09:42Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # a custom query that returns a pending form change for the current user for a given table name. Allows to resume an object creation
mutations/create_project_revision 2022-02-24T19:17:45Z Matthieu Foucault <matthieu@button.is> # add function to create a project revision for a given project
computed_columns/project_revision_project_contact_form_changes 2022-03-03T17:16:01Z Matthieu Foucault <matthieu@button.is> # add a computed column to return a project_revision's contact form_change
computed_columns/form_change_is_unique_value 2022-03-11T22:54:06Z Pierre Bastianelli <pierre.bastianelli@gov.bc.ca> # A computed column that returns whether a column name already has a value in the database
computed_columns/form_change_parent_form_change_from_revision [tables/form_change] 2022-03-23T18:42:00Z Dylan Leard <dylan@button.is> # Function returns a parent form_change record
computed_columns/cif_user_full_name 2022-03-21T20:23:37Z Gurjeet Matharu <gurjeet@matharuco.com> # A computed function for contact and cif_user providing full name
